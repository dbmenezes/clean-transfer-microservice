version: "3"
services:
  mongo:
    container_name: mongo-container
    image: mongo:3
    restart: always
    networks: 
      - broker-kafka
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
  api:
    container_name: api-container
    image: node:12
    working_dir: /usr/src/clean-node-api
    restart: always
    command: bash -c "npm install --only=prod && npm run debug"
    networks: 
      - broker-kafka
    env_file:
      - .env
    volumes:
      - ./dist/:/usr/src/clean-node-api/dist/
      - ./package.json:/usr/src/clean-node-api/package.json
    ports:
      - "5050:5050"
      - "9222:9222"
    links:
      - mongo
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks: 
  broker-kafka:
    driver: bridge 
volumes:
  mongo_db: {}